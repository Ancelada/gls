#!/usr/bin/python
# -*- coding: utf8 -*-
from django.shortcuts import render, redirect
from django.http import HttpResponse, JsonResponse
from mainapp.models import Metka, Std0
from django.db.models import Q
import json
import requests
from django.http import StreamingHttpResponse
try:
	from urllib.request import urlopen
	from urllib.parse import urljoin
except ImportError:
	from urllib2 import urlopen	
	from urlparse import urljoin
import ssl
import datetime
# Create your views here.

# Глобальный словарь с метками
massive = {}

def main(request):
	return render(request, 'metka.html')

def send_json_request(request):
	url = 'http://localhost:8000/recieve_json'
	data = {'data':[{'key1': 'val1'}, {'key2': 'val2'}]}
	headers = {'content-type': 'application/json'}
	r = requests.post(url, data=json.dumps(data), headers=headers)
	return redirect('/')

def recieve_json(request):
	if request.method == 'POST':
		Metka(text=json.loads(request.body)).save()



def send_simple_location_message(request):
	slmp = """LabR,Std0,0000,00001a8,39.681625,76.457092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0001,000000a9,39.691624,76.467094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0002,000000aa,39.701626,76.477089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0003,000000ab,39.711624,76.487091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0004,000000ac,39.721626,76.497093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0005,000000ad,39.731625,76.507095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0006,000000ae,39.741627,76.517090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0007,000000af,39.751625,76.527092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0008,000000b0,39.761627,76.537094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0009,000000b1,39.771626,76.547089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,000a,000000b2,39.781624,76.557091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,000b,000000b3,39.791626,76.567093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,000c,000000b4,39.801624,76.577095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,000d,000000b5,39.811626,76.587090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,000e,000000b6,39.821625,76.597092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,000f,000000b7,39.831627,76.607094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0010,000000b8,39.841625,76.617096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0011,000000b9,39.851624,76.627090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0012,000000ba,39.861626,76.637093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0013,000000bb,39.871624,76.647095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0014,000000bc,39.881626,76.657089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0015,000000bd,39.891624,76.667091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0016,000000be,39.901627,76.677094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0017,000000bf,39.911625,76.687096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0018,000000c0,39.921627,76.697090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0019,000000c1,39.931625,76.707092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,001a,000000c2,39.941624,76.717094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,001b,000000c3,39.951626,76.727089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,001c,000000c4,39.961624,76.737091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,001d,000000c5,39.971626,76.747093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,001e,000000c6,39.981625,76.757095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,001f,000000c7,39.991627,76.767090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0020,000000c8,40.001625,76.777092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0021,000000c9,40.011627,76.787094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0022,000000ca,40.021626,76.797089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0023,000000cb,40.031624,76.807091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0024,000000cc,40.041626,76.817093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0025,000000cd,40.051624,76.827095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0026,000000ce,40.061626,76.837090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0027,000000cf,40.071625,76.847092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0028,000000d0,40.081627,76.857094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0029,000000d1,40.091625,76.867096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,002a,000000d2,40.101624,76.877090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,002b,000000d3,40.111626,76.887093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,002c,000000d4,40.121624,76.897095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,002d,000000d5,40.131626,76.907089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,002e,000000d6,40.141624,76.917091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,002f,000000d7,40.151627,76.927094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0030,000000d8,40.161625,76.937096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0031,000000d9,40.171627,76.947090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0032,000000da,40.181625,76.957092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0033,000000db,40.191624,76.967094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0034,000000dc,40.201626,76.977089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0035,000000dd,40.211624,76.987091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0036,000000de,40.221626,76.997093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0037,000000df,40.231625,77.007095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0038,000000e0,40.241627,77.017090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0039,000000e1,40.251625,77.027092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,003a,000000e2,40.261627,77.037094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,003b,000000e3,40.271626,77.047089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,003c,000000e4,40.281624,77.057091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,003d,000000e5,40.291626,77.067093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,003e,000000e6,40.301624,77.077095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,003f,000000e7,40.311626,77.087090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0040,000000e8,40.321625,77.097092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0041,000000e9,40.331627,77.107094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0042,000000ea,40.341625,77.117096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0043,000000eb,40.351624,77.127090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0044,000000ec,40.361626,77.137093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0045,000000ed,40.371624,77.147095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0046,000000ee,40.381626,77.157089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0047,000000ef,40.391624,77.167091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0048,000000f0,40.401627,77.177094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0049,000000f1,40.411625,77.187096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,004a,000000f2,40.421627,77.197090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,004b,000000f3,40.431625,77.207092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,004c,000000f4,40.441624,77.217094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,004d,000000f5,40.451626,77.227089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,004e,000000f6,40.461624,77.237091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,004f,000000f7,40.471626,77.247093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0050,000000f8,40.481625,77.257095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0051,000000f9,40.491627,77.267090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0052,000000fa,40.501625,77.277092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0053,000000fb,40.511627,77.287094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0054,000000fc,40.521626,77.297089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0055,000000fd,40.531624,77.307091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0056,000000fe,40.541626,77.317093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0057,000000ff,40.551624,77.327095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0058,00000100,40.561626,77.337090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0059,00000101,40.571625,77.347092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,005a,00000102,40.581627,77.357094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,005b,00000103,40.591625,77.367096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,005c,00000104,40.601624,77.377090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,005d,00000105,40.611626,77.387093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,005e,00000106,40.621624,77.397095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,005f,00000107,40.631626,77.407089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0060,00000108,40.641624,77.417091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0061,00000109,40.651627,77.427094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0062,0000010a,40.661625,77.437096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0063,0000010b,40.671627,77.447090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0064,000000a8,39.681625,76.457092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0065,000000a9,39.691624,76.467094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0066,000000aa,39.701626,76.477089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0067,000000ab,39.711624,76.487091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0068,000000ac,39.721626,76.497093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0069,000000ad,39.731625,76.507095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,006a,000000ae,39.741627,76.517090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,006b,000000af,39.751625,76.527092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,006c,000000b0,39.761627,76.537094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,006d,000000b1,39.771626,76.547089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,006e,000000b2,39.781624,76.557091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,006f,000000b3,39.791626,76.567093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0070,000000b4,39.801624,76.577095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0071,000000b5,39.811626,76.587090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0072,000000b6,39.821625,76.597092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0073,000000b7,39.831627,76.607094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0074,000000b8,39.841625,76.617096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0075,000000b9,39.851624,76.627090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0076,000000ba,39.861626,76.637093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0077,000000bb,39.871624,76.647095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0078,000000bc,39.881626,76.657089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0079,000000bd,39.891624,76.667091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,007a,000000be,39.901627,76.677094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,007b,000000bf,39.911625,76.687096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,007c,000000c0,39.921627,76.697090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,007d,000000c1,39.931625,76.707092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,007e,000000c2,39.941624,76.717094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,007f,000000c3,39.951626,76.727089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0080,000000c4,39.961624,76.737091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0081,000000c5,39.971626,76.747093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0082,000000c6,39.981625,76.757095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0083,000000c7,39.991627,76.767090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0084,000000c8,40.001625,76.777092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0085,000000c9,40.011627,76.787094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0086,000000ca,40.021626,76.797089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0087,000000cb,40.031624,76.807091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0088,000000cc,40.041626,76.817093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0089,000000cd,40.051624,76.827095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,008a,000000ce,40.061626,76.837090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,008b,000000cf,40.071625,76.847092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,008c,000000d0,40.081627,76.857094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,008d,000000d1,40.091625,76.867096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,008e,000000d2,40.101624,76.877090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,008f,000000d3,40.111626,76.887093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0090,000000d4,40.121624,76.897095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0091,000000d5,40.131626,76.907089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0092,000000d6,40.141624,76.917091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0093,000000d7,40.151627,76.927094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0094,000000d8,40.161625,76.937096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0095,000000d9,40.171627,76.947090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0096,000000da,40.181625,76.957092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0097,000000db,40.191624,76.967094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0098,000000dc,40.201626,76.977089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,0099,000000dd,40.211624,76.987091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,009a,000000de,40.221626,76.997093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,009b,000000df,40.231625,77.007095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,009c,000000e0,40.241627,77.017090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,009d,000000e1,40.251625,77.027092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,009e,000000e2,40.261627,77.037094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,009f,000000e3,40.271626,77.047089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a0,000000e4,40.281624,77.057091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a1,000000e5,40.291626,77.067093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a2,000000e6,40.301624,77.077095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a3,000000e7,40.311626,77.087090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a4,000000e8,40.321625,77.097092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a5,000000e9,40.331627,77.107094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a6,000000ea,40.341625,77.117096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a7,000000eb,40.351624,77.127090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a8,000000ec,40.361626,77.137093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00a9,000000ed,40.371624,77.147095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00aa,000000ee,40.381626,77.157089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00ab,000000ef,40.391624,77.167091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00ac,000000f0,40.401627,77.177094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00ad,000000f1,40.411625,77.187096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00ae,000000f2,40.421627,77.197090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00af,000000f3,40.431625,77.207092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b0,000000f4,40.441624,77.217094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b1,000000f5,40.451626,77.227089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b2,000000f6,40.461624,77.237091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b3,000000f7,40.471626,77.247093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b4,000000f8,40.481625,77.257095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b5,000000f9,40.491627,77.267090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b6,000000fa,40.501625,77.277092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b7,000000fb,40.511627,77.287094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b8,000000fc,40.521626,77.297089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00b9,000000fd,40.531624,77.307091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00ba,000000fe,40.541626,77.317093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00bb,000000ff,40.551624,77.327095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00bc,00000100,40.561626,77.337090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00bd,00000101,40.571625,77.347092,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00be,00000102,40.581627,77.357094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00bf,00000103,40.591625,77.367096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c0,00000104,40.601624,77.377090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c1,00000105,40.611626,77.387093,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c2,00000106,40.621624,77.397095,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c3,00000107,40.631626,77.407089,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c4,00000108,40.641624,77.417091,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c5,00000109,40.651627,77.427094,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c6,0000010a,40.661625,77.437096,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
LabR,Std0,00c7,0000010b,40.671627,77.447090,6.803710,7,2016-01-13T13:51:31:239+3,2,0038,0000
"""
	url = 'http://localhost:8000/receive_slmp'
	r = requests.post(url, data=slmp)
	return redirect('/')


def receive_slmp(request):
	if request.method == 'POST':
		# в глобальный список
		line = request.body.decode('utf-8')
		massive['data'] = line
		return HttpResponse('ok')
	return HttpResponse('ok')

def save_slmp(request):
	if request.method == 'POST':
		queryset = list(Std0.objects.raw("""
			select *, max(DateImport) as Date from Metka
			where readed is null"""))
		try:
			line = queryset[0].text.decode('utf-8')
		except:
			return HttpResponse('Nothing to parse')
		line = line.split('Zone')
		if (len(line) > 1):
			Metka(text=line[2].replace('\n', '')).save()
			line = line[2]
			line = line.split(',')
			Std0(LabD=line[0], Std0=line[1], Tag_ID_Format=line[2], Tag_ID=line[3], X=line[4], Y=line[5], Z=line[6], Zone=line[7], DateImport=datetime.datetime.now()).save()

			#отметка что данная пачка распарсена
			mrk = queryset[0].DateImport
			a = Metka.objects.filter(DateImport=mrk).update(readed=True)
			return HttpResponse('received')
		else:
			line = line[0].split('\n')
			for i in line:
				try:
					line = i.split(',')
					Std0(LabD=line[0], Std0=line[1], Tag_ID_Format=line[2], Tag_ID=line[3], X=line[4], Y=line[5], Z=line[6], Zone=line[7], Timestamp=line[8], DateImport=datetime.datetime.now()).save()
					#отметка что данная пачка распарсена
					mrk = queryset[0].DateImport
					a = Metka.objects.filter(DateImport=mrk).update(readed=True)
				except:
					return HttpResponse('received')
		return HttpResponse('received')

def landscape(request):
	return render(request, 'landscape.html')

def getxyzvalues(request):
	if request.method == 'POST':
		queryset = list(Std0.objects.raw("""
			select *, max(DateImport) as Date from Std0
			group by Tag_ID
			"""))
		Str = ''
		num = 0
		for tag_id in queryset:
			if num < len(queryset) - 1:
				Str += '(Tag_ID="%s" and DateImport="%s") or ' %(tag_id.Tag_ID, tag_id.Date)
			else:
				Str += '(Tag_ID="%s" and DateImport="%s")' %(tag_id.Tag_ID, tag_id.Date)
			num+=1
		Str = Str.replace('"', "'")
		queryset2 = list(Std0.objects.raw("""
			select * from Std0
			where %s
			""" % Str))
		marks = {}
		num = 0
		for i in queryset2:
			spisok = []
			spisok.append({'tag_id':i.Tag_ID, 'x': i.X, 'y': i.Y, 'z': i.Z})
			marks[num] = spisok
			num+=1
	return JsonResponse(marks)

def movement(request):
	return render(request, 'movement.html')

def children(request):
	return render(request, 'children.html')

def loadcollada(request):
	return render(request, 'loadcollada.html')

def values(request):
	return render(request, 'values.html')

def getmarksvalues(request):
	if request.method == 'POST':
		marks = {}
		line = massive['data']
		line = line.split('Zone')
		num = 0
		if (len(line) > 1):
			line = line[2]
			line = line.split(',')
			for i in line:
				spisok = []
				spisok.append({'tag_id':line[3], 'x': line[4], 'y': line[5], 'z': line[6], 'zone':[8]})
				marks[num] = spisok
			return JsonResponse(marks)
		else:
			line = line[0].split('\n')
			for i in line:
				try:
					line = i.split(',')
					spisok = []
					spisok.append({'tag_id':line[3], 'x': line[4], 'y': line[5], 'z': line[6], 'zone':line[8]})
					marks[num] = spisok
					num +=1
				except:
					pass
			return JsonResponse(marks)